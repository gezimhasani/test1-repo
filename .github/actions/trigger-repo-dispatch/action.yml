name: Trigger Repository Dispatch

description: 'Triggers a repository_dispatch event on a specified repository.'

inputs:
  personal_access_token:
    description: 'Personal access token with repo scope.'
    required: true
  target_repo:
    description: 'The target repository to send the dispatch event to (e.g., username/repo-name).'
    required: true
  event_type:
    description: 'The event type that will be triggered.'
    required: true
  client_payload:
    description: 'Additional payload to be sent with the dispatch event (JSON format).'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Trigger repository dispatch
      shell: bash
      run: |
        echo "Triggering repository_dispatch to ${{ inputs.target_repo }}"

        # Perform the curl call to trigger repository_dispatch, capture both output and status code
        RESPONSE=$(curl -v -w "%{http_code}" -o response.json -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.personal_access_token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ inputs.target_repo }}/dispatches \
          -d '{"event_type": "test-event", "client_payload": {"unit": false, "integration": true}}')

        # Check if the HTTP status code starts with 2 (successful responses in the 2xx range)
        if [[ ! "$RESPONSE" =~ ^2 ]]; then
          echo "Error triggering repository dispatch, HTTP status code: $RESPONSE"
          cat response.json  # Output the response content to help debug
          exit 1  # Exit with error code to stop further steps
        fi

        echo "Successfully triggered repository dispatch."
